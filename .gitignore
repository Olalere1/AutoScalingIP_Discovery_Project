# Local .terraform directories
**/.terraform/*
<<<<<<< HEAD
<<<<<<< HEAD

# .tfstate files
*.tfstate
*.tfstate.*
=======
=======
>>>>>>> d5c29436427204eaa43f86a058b8e05161ffdb79
.terraform.lock.hcl
# .tfstate files
*.tfstate
*.tfstate.*
**/.pem
*.pem
*/*.pem
<<<<<<< HEAD
>>>>>>> 82dfa1b (working directory)
=======
>>>>>>> d5c29436427204eaa43f86a058b8e05161ffdb79

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
<<<<<<< HEAD
<<<<<<< HEAD
*.tfvars.json
=======
# *.tfvars.json
>>>>>>> 82dfa1b (working directory)
=======
# *.tfvars.json
>>>>>>> d5c29436427204eaa43f86a058b8e05161ffdb79

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

<<<<<<< HEAD
<<<<<<< HEAD
# Ignore transient lock info files created by terraform apply
.terraform.tfstate.lock.info

=======
>>>>>>> 82dfa1b (working directory)
=======
>>>>>>> d5c29436427204eaa43f86a058b8e05161ffdb79
# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
<<<<<<< HEAD
<<<<<<< HEAD
terraform.rc
=======
terraform.rc.DS_Store
>>>>>>> 82dfa1b (working directory)
=======
terraform.rc.DS_Store
>>>>>>> d5c29436427204eaa43f86a058b8e05161ffdb79
